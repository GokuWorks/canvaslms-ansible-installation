# deploy Canvas LMS code on web servers

# Create system user canvas
  - name: create system user canvas
    user:
     name: "{{ sys_user }}"
     comment: Canvas LMS
     password: "{{ sys_pass }}"
     state: present
  
# Create dir for canvas install
  - name: Create install dir
    ansible.builtin.file:
      path: "{{ install_dir }}"
      state: directory
      mode: '755'

# Install git with apt
  - name: Install git
    apt:
      name: "git"
      state: latest

# Deploy code from git
  - name: Deploy code from git
    become: true
    become_user: canvas
    git:
      repo: 'https://github.com/instructure/canvas-lms.git'
      dest: "{{ install_dir }}"
      version: prod
    ignore_errors: yes

# Bundler and Canvas dependencies
  - name: install vendor/bundle
    become: true
    become_user: canvas
    shell: bundle config set --local path vendor/bundle && bundle install
    args:
     chdir: "{{ install_dir }}"

# Install Yarn
  - name: install yarn
    become: true
    become_user: canvas
    shell: yarn install
    args:
      chdir: "{{ install_dir }}"
    async: 300
    poll: 5
    ignore_errors: yes

# Configure Canvas LMS 
  - name: copy default config
    become: true
    become_user: canvas
    shell: for config in amazon_s3 database delayed_jobs domain file_store outgoing_mail security external_migration; do cp config/$config.yml.example config/$config.yml; done
    args:
      chdir: "{{ install_dir }}"
      creates: config/domain.yml
  - name: Template a file to config/database.yml
    template:
        src: templates/database.yml.j2
        dest: "{{ install_dir }}/config/database.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: Template a file to config/outgoing_mail.yml
    template:
        src: templates/outgoing_mail.yml.j2
        dest: "{{ install_dir }}/config/outgoing_mail.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: Template a file to config/domain.yml
    template:
        src: templates/domain.yml.j2
        dest: "{{ install_dir }}/config/domain.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: Template a file to config/security.yml
    template:
        src: templates/security.yml.j2
        dest: "{{ install_dir }}/config/security.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: Template a file to config/logging.yml
    template:
        src: templates/logging.yml.j2
        dest: "{{ install_dir }}/config/logging.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: Template a file to config/delayed_jobs.yml
    template:
        src: templates/delayed_jobs.yml.j2
        dest: "{{ install_dir }}/config/delayed_jobs.yml"
        owner: canvas
        group: canvas
        mode: '0644'
  - name: create folders
    become: true
    become_user: canvas
    shell: mkdir -p log tmp/pids public/assets app/stylesheets/brandable_css_brands
    args:
      chdir: "{{ install_dir }}"
  - name: Touch files
    file:
     owner: canvas
     group: canvas
     path: "{{ install_dir }}/{{ item.filename }}"
     state: touch
    with_items:
     - filename: app/stylesheets/_brandable_variables_defaults_autogenerated.scss
     - filename: Gemfile.lock
     - filename: log/production.log

# Optimizing File Downloads
  - name: create config/environments/production-local.rb
    template:
        src: templates/production-local.rb.j2
        dest: "{{ install_dir }}/config/environments/production-local.rb"
        owner: canvas
        group: canvas
        mode: '0644'

# configure cache_store cache
  - name: create config/cache_store.yml
    template:
        src: templates/cache_store.yml.j2
        dest: "{{ install_dir }}/config/cache_store.yml"
        owner: canvas
        group: canvas
        mode: '0644'

# configure redis
  - name: create config/redis.yml
    template:
        src: templates/redis.yml.j2
        dest: "{{ install_dir }}/config/redis.yml"
        owner: canvas
        group: canvas
        mode: '0644'

# Install QTI Migration Tool
  - name: Install python3-lxml
    apt:
      name: "python3-lxml"
      state: present
      update_cache: yes
  - name: Install QTIMigrationTool
    become: true
    become_user: canvas
    git:
      repo: https://github.com/instructure/QTIMigrationTool.git
      dest: "{{ install_dir }}/vendor/QTIMigrationTool"
  - name: chmod migrate.py
    file:
      path: "{{ install_dir }}/vendor/QTIMigrationTool/migrate.py"
      mode: 0755

# Cron Jobs are running on web node by default
  - name: create symlink for canvas_init
    file:
      src: "{{ install_dir }}/script/canvas_init"
      dest: /etc/init.d/canvas_init
      state: link
  - name: add canvas_init to startup
    shell: update-rc.d canvas_init defaults
